name: development deployment

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-versions: [16.x]

    env:
      REACT_APP_AWS_IMAGE_ACCESS_KEY_ID: ${{ secrets.REACT_APP_AWS_IMAGE_ACCESS_KEY_ID}}
      REACT_APP_IMAGE_AWS_SECRET_ACCESS_KEY: ${{ secrets.REACT_APP_IMAGE_AWS_SECRET_ACCESS_KEY}}
      REACT_APP_IMAGE_BUCKET_NAME: ${{ secrets.REACT_APP_IMAGE_BUCKET_NAME}}
      REACT_APP_IMAGE_REGION: ${{ secrets.REACT_APP_IMAGE_REGION}}
      REACT_APP_KAKAOMAP_API_KEY: ${{ secrets.REACT_APP_KAKAOMAP_API_KEY}}
      REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL}}
      PUBLIC_URLL: ${{ secrets.PUBLIC_URL}}

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.REACT_APP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.REACT_APP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REACT_APP_AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.REACT_APP_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.REACT_APP_AWS_DISTRIBUTION_ID}} --paths "/*"
